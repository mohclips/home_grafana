version: "3.7"
services:

## Grafana - Data Visualizer
  # Create file structure:
  # mkdir -p ${PWD}/grafana/config
  # mkdir ${PWD}/shared
  # Create config files
  # docker run --rm --entrypoint cat grafana/grafana /etc/grafana/grafana.ini > ${PWD}/grafana/config/grafana.ini
  # Login: admin / admin
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
#    networks:
#      - grafana-net
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ${PWD}/grafana/config/grafana.ini:/etc/grafana/grafana.ini:ro
      - ${PWD}/grafana/logs:/var/log/grafana
      - ${PWD}/shared:/shared
    environment:
      - GF_SERVER_ROOT_URL=https://grafana.${DOMAINNAME}
      - GF_AUTH_BASIC_ENABLED=false
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --tries=1 --spider http://localhost:3000/api/health || exit 1",
        ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 1m
    

  # https://github.com/grafana/grafana-image-renderer/blob/master/docs/remote_rendering_using_docker.md
  renderer:
    container_name: grafana-image-renderer
    image: grafana/grafana-image-renderer:latest
    restart: always
#    networks:
#      - grafana-net
    ports:
      - 8081
    environment:
      ENABLE_METRICS: 'true'
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --tries=1 --spider http://localhost:8081/ || exit 1",
        ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 1m

volumes:
  grafana_data:

#networks:
#  grafana-net:

